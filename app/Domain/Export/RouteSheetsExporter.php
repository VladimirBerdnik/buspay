<?php

namespace App\Domain\Export;

use App\Models\RouteSheet;
use App\Repositories\RouteSheetRepository;
use Illuminate\Support\Collection;
use Log;
use Saritasa\LaravelRepositories\DTO\SortOptions;
use Saritasa\LaravelRepositories\Exceptions\BadCriteriaException;

/**
 * Route sheets records exporter.
 */
class RouteSheetsExporter extends CsvFileExporter
{
    /**
     * Route sheets records storage.
     *
     * @var RouteSheetRepository
     */
    private $repository;

    /**
     * Route sheets records exporter.
     *
     * @param RouteSheetRepository $repository Route sheets records storage
     */
    public function __construct(RouteSheetRepository $repository)
    {
        $this->repository = $repository;
    }

    /**
     * Exports route sheets records into file with respect to requested filter and sorting details.
     *
     * @param string[] $filters Filter criteria that should be applied against list of route sheets
     * @param SortOptions $sortOptions Requested sort options of route sheets list
     *
     * @return string
     *
     * @throws BadCriteriaException
     */
    public function export(array $filters, SortOptions $sortOptions): string
    {
        Log::debug('Route sheets export process started', $filters);

        $filename = $this->getTempFileName();
        $file = $this->openFile($filename);

        $headers = [
            trans('routeSheetsExport.id'),
            trans('routeSheetsExport.company.name'),
            trans('routeSheetsExport.route.name'),
            trans('routeSheetsExport.bus.state_number'),
            trans('routeSheetsExport.driver.full_name'),
            trans('routeSheetsExport.active_from'),
            trans('routeSheetsExport.active_to'),
            trans('routeSheetsExport.autogenerated'),
            trans('routeSheetsExport.transactions_count'),
        ];
        $this->putRow($file, $headers);

        $this->repository->chunkWith(
            ['company', 'route', 'driver', 'bus'],
            ['transactions'],
            $filters,
            $sortOptions,
            $this->exportChunkSize,
            function (Collection $routeSheets) use ($file): void {
                /**
                 * Route sheets to put into file.
                 *
                 * @var RouteSheet $routeSheet
                 */
                foreach ($routeSheets as $routeSheet) {
                    $requiredData = [
                        $routeSheet->id,
                        $routeSheet->company->name,
                        $routeSheet->route ? $routeSheet->route->name : null,
                        $routeSheet->bus->state_number,
                        $routeSheet->driver ? $routeSheet->driver->full_name : null,
                        $routeSheet->active_from->toIso8601String(),
                        $routeSheet->active_to->toIso8601String(),
                        $routeSheet->autogenerated ? '1' : '0',
                        $routeSheet->getAttribute('transactions_count'),
                    ];
                    $this->putRow($file, $requiredData);
                }
            }
        );

        $this->closeFile($file);

        Log::debug("Route sheets export process to file {$filename} finished");

        return $filename;
    }
}
